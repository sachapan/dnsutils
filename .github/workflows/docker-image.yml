name: Publish Docker Image

on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #- name: Setup Docker BuildX
      #  uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_TOKEN }}
          #password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}  
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          #platforms: linux/amd64
          push: true
          #tags: ghcr.io/sachapan/dnsutils:latest
          #${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          #tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.sha }}
      #- name: Generate SBOM attestation
      #  uses: actions/attest-sbom@v1
      #  with:
      #    subject-name: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}
      #    subject-digest: ${{ steps.push.outputs.digest }}
      #    sbom-path: 'sbom.json'
      #    push-to-registry: true
      #- name: Generate artifact attestation
      #  uses: actions/attest-build-provenance@v1
      #  with:
      #    subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #    subject-digest: ${{ steps.push.outputs.digest }}
      #    push-to-registry: true    
          
